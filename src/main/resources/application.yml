spring:
  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        hbm2ddl:
          auto: validate
        jdbc:
          time_zone: UTC
        cache:
          use_second_level_cache: false
          use_query_cache: false

  sql:
    init:
      mode: never
      schema-locations: classpath:schema-postgres.sql
      data-locations: classpath:data.sql  

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
            redirect-uri: "https://solo-springboot-backend-production.up.railway.app/login/oauth2/code/google"
            client-name: Google
          facebook:
            client-id: ${FACEBOOK_CLIENT_ID}
            client-secret: ${FACEBOOK_CLIENT_SECRET}
            scope:
              - email
              - public_profile
            redirect-uri: "https://solo-springboot-backend-production.up.railway.app/login/oauth2/code/facebook"
            client-name: Facebook
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope:
              - read:user
              - user:email
            redirect-uri: "https://solo-springboot-backend-production.up.railway.app/login/oauth2/code/github"
            client-name: GitHub
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: id

server:
  port: ${SERVER_PORT:8080}  
  mvc:
    locale: zh_TW
    locale-resolver: accept-header
  forward-headers-strategy: framework
  
jwt:
  secret: ${JWT_SECRET}
  expiration: ${JWT_EXPIRATION:86400000}
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}

cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:https://solo-react-frontend.vercel.app}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: "*"
  allow-credentials: false

oauth2:
  frontend-success-url: ${OAUTH2_FRONTEND_SUCCESS_URL:https://solo-react-frontend.vercel.app}
  frontend-failure-url: ${OAUTH2_FRONTEND_FAILURE_URL:https://solo-react-frontend.vercel.app}

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true

